swagger: '2.0'
info:
  description: 'Mallikas is a database service in the dependency engine of OpenReq infrastructure serving primarily the Milla service.Mallikas takes care of storing OpenReq relevant data in OpenReq specific format. While Mallikas has public endpoints, the endpoints of Mallikas should be accessed only through other services, such as Milla. The endpoints should be used directly mainly only for testing purposes.'
  version: '1.10'
  title: Mallikas
host: 'localhost:9204'
basePath: /
tags:
  - name: mallikas-controller
    description: Mallikas Controller
paths:
  /allDependencies:
    get:
      tags:
        - mallikas-controller
      summary: Get a list of all dependencies
      description: Get a list of all dependencies saved in the database.
      operationId: getAllDependenciesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /allRequirements:
    get:
      tags:
        - mallikas-controller
      summary: Get a list of all requirements
      description: Get a list of all requirements saved in the database.
      operationId: sendAllRequirementsToMillaUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dependencies:
    post:
      tags:
        - mallikas-controller
      summary: Import a list of dependencies
      description: 'Import a list of new OpenReq JSON Dependencies to the database. If a dependency exists, it is not updated or changed.'
      operationId: importDependenciesFromMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dependencies
          description: dependencies
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Dependency'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dependents:
    post:
      tags:
        - mallikas-controller
      summary: Get the dependent requirements including dependencies of a requirement
      description: Get the dependent requirements including dependencies of a requirement saved in the database.
      operationId: sendRequirementAndDependentReqsToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: id
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /listAllProjects:
    get:
      tags:
        - mallikas-controller
      summary: Get a list of projects
      description: Get a list of ids of all projects saved in the database.
      operationId: getAListOfProjectsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /one:
    post:
      tags:
        - mallikas-controller
      summary: Get a requirement
      description: Get a requirement saved in the database.
      operationId: sendOneRequirementToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: id
          description: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /onlyDependenciesByParams:
    post:
      tags:
        - mallikas-controller
      summary: sendOnlyDependenciesByParamsToMilla
      operationId: sendOnlyDependenciesByParamsToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: params
          description: params
          required: true
          schema:
            $ref: '#/definitions/RequestParams'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /project:
    post:
      tags:
        - mallikas-controller
      summary: Import a project
      description: 'Import an OpenReq JSON project to the database. If a project exists, it is updated.'
      operationId: importProjectFromMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: project
          description: project
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /projectRequirements:
    post:
      tags:
        - mallikas-controller
      summary: Get the requirements including dependencies of a project
      description: Get the requirements including dependencies of a project saved in the database.
      operationId: sendRequirementsInProjectToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: projectId
          description: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reqsSinceDate:
    post:
      tags:
        - mallikas-controller
      summary: sendRequirementsSinceDateToMilla
      operationId: sendRequirementsSinceDateToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: created_at
          description: created_at
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reqsWithDependencyType:
    post:
      tags:
        - mallikas-controller
      summary: Get a list of requirements including  dependencies with the dependency type
      description: Get a list of requirements including  dependencies with the specific dependency type saved in the database.
      operationId: sendRequirementsWithDependencyTypeToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: type
          description: type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reqsWithResolution:
    post:
      tags:
        - mallikas-controller
      summary: Get a list of requirements including  dependencies with the resolution
      description: Get a list of requirements including  dependencies with the specific resolution saved in the database.
      operationId: sendRequirementsWithResolutionToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: resolutionValue
          description: resolutionValue
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /reqsWithType:
    post:
      tags:
        - mallikas-controller
      summary: Get a list of requirements including  dependencies with the requirement type
      description: Get a list of requirements including  dependencies with the specific requirement type saved in the database.
      operationId: sendRequirementsWithTypeToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: whole
          description: whole
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /requirements:
    post:
      tags:
        - mallikas-controller
      summary: Import a list of requirements
      description: 'Import a list of new OpenReq JSON Requirements to the database. If a requirement exists, it is not updated or changed.'
      operationId: importRequirementsFromMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: requirements
          description: requirements
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Requirement'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /requirementsByParams:
    post:
      tags:
        - mallikas-controller
      summary: sendRequirementsByParamsToMilla
      operationId: sendRequirementsByParamsToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: params
          description: params
          required: true
          schema:
            $ref: '#/definitions/RequestParams'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /selectedReqs:
    post:
      tags:
        - mallikas-controller
      summary: Get a list of selected requirements
      description: Get a list of selected requirements saved in the database.
      operationId: sendSelectedRequirementsToMillaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: ids
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateDependencies:
    post:
      tags:
        - mallikas-controller
      summary: Update selected dependencies
      description: Update existing and save new dependencies in the database.
      operationId: updateDependenciesUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dependencies
          description: dependencies
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Dependency'
        - name: userInput
          in: query
          description: userInput
          required: false
          type: boolean
        - name: isProposed
          in: query
          description: isProposed
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateProjectSpecifiedRequirements/:
    post:
      tags:
        - mallikas-controller
      summary: Update a list of requirements
      description: Update a list of requirements of the given project saved in the database.
      operationId: updateProjectSpecifiedRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reqIds
          description: reqIds
          required: true
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                type: object
        - name: projectId
          in: query
          description: projectId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateRequirements:
    post:
      tags:
        - mallikas-controller
      summary: Update selected requirements
      description: Update existing and save new requirements to the database.
      operationId: updateRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: requirements
          description: requirements
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Requirement'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Comment:
    type: object
    properties:
      commentDoneBy:
        $ref: '#/definitions/Person'
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      text:
        type: string
  Dependency:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      dependency_score:
        type: number
        format: double
      dependency_type:
        type: string
        enum:
          - CONTRIBUTES
          - DAMAGES
          - REFINES
          - REQUIRES
          - INCOMPATIBLE
          - DECOMPOSITION
          - SIMILAR
          - DUPLICATES
          - REPLACES
      description:
        type: array
        items:
          type: string
      fromid:
        type: string
      id:
        type: string
      status:
        type: string
        enum:
          - PROPOSED
          - ACCEPTED
          - REJECTED
      toid:
        type: string
  Person:
    type: object
    properties:
      email:
        type: string
      username:
        type: string
  Project:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      name:
        type: string
      specifiedRequirements:
        type: array
        items:
          type: string
  RequestParams:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      includeProposed:
        type: boolean
      includeRejected:
        type: boolean
      maxDependencies:
        type: integer
        format: int32
      modified_at:
        type: string
        format: date-time
      projectId:
        type: string
      proposedOnly:
        type: boolean
      requirementIds:
        type: array
        items:
          type: string
      resolution:
        type: string
      scoreThreshold:
        type: number
        format: double
      scoreTreshold:
        type: number
        format: double
      status:
        type: string
      type:
        type: string
  Requirement:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/Requirement'
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      name:
        type: string
      priority:
        type: integer
        format: int32
      requirementParts:
        type: array
        items:
          $ref: '#/definitions/RequirementPart'
      requirement_type:
        type: string
        enum:
          - PROSE
          - REQUIREMENT
          - FUNCTIONAL
          - NON_FUNCTIONAL
          - ISSUE
          - USER_STORY
          - EPIC
          - INITIATIVE
          - TASK
          - BUG
      status:
        type: string
        enum:
          - SUBMITTED
          - PENDING
          - ACCEPTED
          - DRAFT
          - DEFERRED
          - OPEN
          - PLANNED
          - COMPLETED
          - REJECTED
          - RECOMMENDED
          - IN_PROGRESS
      text:
        type: string
  RequirementPart:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      id:
        type: string
      name:
        type: string
      text:
        type: string



