swagger: '2.0'
info:
  description: 'Mallikas is a database service in the dependency engine of OpenReq infrastructure serving primarily the Milla service. Mallikas takes care of storing OpenReq relevant data in OpenReq specific format. While Mallikas has public endpoints, the endpoints of Mallikas should be accessed only through other services, such as Milla. The endpoints should be used directly mainly only for testing purposes.'
  version: '1.10'
  title: Mallikas
host: 'localhost:9204'
basePath: /
tags:
  - name: mallikas-controller
    description: Mallikas Controller
paths:
  /dependenciesByParams:
    post:
      tags:
        - mallikas-controller
      summary: Get dependencies by params posted
      description: Fetches dependencies and their dependent requirements by parameters provided.
      operationId: getDependenciesByParamsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: params
          description: params
          required: true
          schema:
            $ref: '#/definitions/RequestParams'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /importProject:
    post:
      tags:
        - mallikas-controller
      summary: Import a project
      description: 'Import an OpenReq JSON project to the database. If a project exists, it is updated.'
      operationId: importProjectUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: project
          description: project
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /listOfProjects:
    get:
      tags:
        - mallikas-controller
      summary: Get a list (map) of projects currently saved
      description: Get a map with ids of all saved projects and their requirement counts.
      operationId: getListOfProjectsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /projectRequirements:
    get:
      tags:
        - mallikas-controller
      summary: Get all requirements and dependencies of a project
      description: Get all requirements and dependencies of a project saved in the database.
      operationId: sendRequirementsInProjectToMillaUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: projectId
          in: query
          description: projectId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /requirementsByParams:
    post:
      tags:
        - mallikas-controller
      summary: Get requirements by params posted
      description: Fetches requirements and their dependencies by parameters provided.
      operationId: getRequirementsByParamsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: params
          description: params
          required: true
          schema:
            $ref: '#/definitions/RequestParams'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /selectedReqs:
    post:
      tags:
        - mallikas-controller
      summary: Get requirements by ids posted
      description: Fetches a list of requirements based on the ids provided.
      operationId: getSelectedRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: ids
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateDependencies:
    post:
      tags:
        - mallikas-controller
      summary: Post dependencies to be updated
      description: Update existing and save new dependencies in the database.
      operationId: updateDependenciesUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dependencies
          description: dependencies
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Dependency'
        - name: userInput
          in: query
          description: userInput
          required: false
          type: boolean
        - name: isProposed
          in: query
          description: isProposed
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateProjectSpecifiedRequirements:
    post:
      tags:
        - mallikas-controller
      summary: Post project specified requirements to be updated
      description: Update the specified requirements of a project in the database.
      operationId: updateProjectSpecifiedRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: reqIds
          description: reqIds
          required: true
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
        - name: projectId
          in: query
          description: projectId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /updateRequirements:
    post:
      tags:
        - mallikas-controller
      summary: Post requirements to be updated
      description: Update existing and save new requirements to the database.
      operationId: updateRequirementsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: requirements
          description: requirements
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Requirement'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Comment:
    type: object
    properties:
      commentDoneBy:
        $ref: '#/definitions/Person'
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      text:
        type: string
  Dependency:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      dependency_score:
        type: number
        format: double
      dependency_type:
        type: string
        enum:
          - CONTRIBUTES
          - DAMAGES
          - REFINES
          - REQUIRES
          - INCOMPATIBLE
          - DECOMPOSITION
          - SIMILAR
          - DUPLICATES
          - REPLACES
      description:
        type: array
        items:
          type: string
      fromid:
        type: string
      id:
        type: string
      status:
        type: string
        enum:
          - PROPOSED
          - ACCEPTED
          - REJECTED
      toid:
        type: string
  Person:
    type: object
    properties:
      email:
        type: string
      username:
        type: string
  Project:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      name:
        type: string
      specifiedRequirements:
        type: array
        items:
          type: string
  RequestParams:
    type: object
    properties:
      created_at:
        type: string
        format: date-time
      includeProposed:
        type: boolean
      includeRejected:
        type: boolean
      maxDependencies:
        type: integer
        format: int32
      modified_at:
        type: string
        format: date-time
      projectId:
        type: string
      proposedOnly:
        type: boolean
      requirementIds:
        type: array
        items:
          type: string
      resolution:
        type: string
      scoreThreshold:
        type: number
        format: double
      scoreTreshold:
        type: number
        format: double
      status:
        type: string
      type:
        type: string
  Requirement:
    type: object
    properties:
      children:
        type: array
        items:
          $ref: '#/definitions/Requirement'
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      created_at:
        type: integer
        format: int64
      id:
        type: string
      modified_at:
        type: integer
        format: int64
      name:
        type: string
      priority:
        type: integer
        format: int32
      requirementParts:
        type: array
        items:
          $ref: '#/definitions/RequirementPart'
      requirement_type:
        type: string
        enum:
          - PROSE
          - REQUIREMENT
          - FUNCTIONAL
          - NON_FUNCTIONAL
          - ISSUE
          - USER_STORY
          - EPIC
          - INITIATIVE
          - TASK
          - BUG
      status:
        type: string
        enum:
          - SUBMITTED
          - PENDING
          - ACCEPTED
          - DRAFT
          - DEFERRED
          - OPEN
          - PLANNED
          - COMPLETED
          - REJECTED
          - RECOMMENDED
          - IN_PROGRESS
      text:
        type: string
  RequirementPart:
    type: object
    properties:
      created_at:
        type: integer
        format: int64
      id:
        type: string
      name:
        type: string
      text:
        type: string

